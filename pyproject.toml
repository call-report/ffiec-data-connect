[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ffiec-data-connect"
version = "2.0.0rc4"
authors = [
    {name = "Civic Forge Solutions LLC", email = "michael@civicforge.solutions"},
]
description = "Secure, thread-safe Python wrapper for FFIEC webservice API with async support"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Typing :: Typed",
]
license = "MPL-2.0"
keywords = [
    "ffiec", 
    "banking", 
    "financial", 
    "regulatory", 
    "call-report", 
    "ubpr", 
    "fdic", 
    "async", 
    "pandas", 
    "polars"
]
dependencies = [
    # Pin upper bounds to next major to reduce unexpected breaking changes.
    # Adjust after compatibility verification with newer majors.
    "requests>=2.25.0,<3.0.0",
    "pandas>=1.3.0,<3.0.0",
    "numpy>=1.20.0,<3.0.0",  # Allow NumPy 2.x; revisit before 3.x
    "zeep>=4.0.0,<5.0.0",
    "lxml>=4.6.0,<6.0.0",
    "xmltodict>=0.12.0,<1.0.0",  # Pre-1.0 project: cap at first stable major
    "defusedxml>=0.7.0,<1.0.0",
]

[project.optional-dependencies]
polars = [
    "polars>=0.19.0,<1.0.0",
    "pyarrow>=10.0.0,<20.0.0",  # Broad upper cap; tighten if needed
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "types-requests>=2.25.0",
    "psutil>=5.8.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "coverage>=7.0.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
]
notebook = [
    "jupyter>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]
all = [
    "ffiec-data-connect[polars,dev,docs,notebook]"
]

[project.urls]
"Homepage" = "https://github.com/civic-forge/ffiec-data-connect"
"Documentation" = "https://ffiec-data-connect.readthedocs.io/"
"Repository" = "https://github.com/civic-forge/ffiec-data-connect"
"Bug Tracker" = "https://github.com/civic-forge/ffiec-data-connect/issues"
"Changelog" = "https://github.com/civic-forge/ffiec-data-connect/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
ffiec_data_connect = ["py.typed"]

# Test configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/ffiec_data_connect"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | dev
  | htmlcov
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# MyPy type checking
[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
show_error_codes = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "zeep.*",
    "lxml.*",
    "polars.*",
]
ignore_missing_imports = true